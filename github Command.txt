깃

깃은 컴퓨터 파일의 변경사항을 추적하고 여러 명의 사용자들 간에 해당 파일들의 작업을
조율하기 위한 분산 버전 관리 시스템이다. 소프트웨어 개발에서는 소스 관리에 주로 사용되지만,
어떠한 집합의 파일의 변경사항을 지속적으로 추적하기 위해 사용될 수 있다.

 https://www.youtube.com/watch?v=tC8Xj_Bf8Fw

////////////////////////////////////////////////////////
Web 상의 Git과 연결된 Local Folder

3. Root Folder 연결

마우스 오른쪽 git bash here 클릭

git init
git remote add origin repository address

-> $ git remote add origin https://github.com/johyeoncheol/github_practice.git

이런식으로 입력해주면 된다.

readme를 만든경우 변경 사항을 로컬저장소에도 만들어 줘야 한다.

git pull origin master --allow-unrelated-histories

//////////////////////////////////////////////////////////
 
4. Push 전엔 Pull이 있다.

git pull origin master
=> 지정 해놓은 Repository에서 끌어옵니다.

git status
=> 현재 Git 과의 상태를 확인합니다.

git add .
=> 변경된 파일들을 모두 Tracking!

git commit -m "message"
=> 인식 할 수 있는 commit을 달아줍니다.

git push origin +master
=> 실제로 Git에 PUSH 하는 명령어

//////////////////////////////////////////////////////////////////
Pull 명령어

git pull origin master

/////////////////////////////////////////////////////////////////
Push 명령어

git status

git add .

git commit -m "message"

git push origin master

=> 4개의 명령어가 실행되면 권한이 필요하기 때문에 
아이디와 비밀번호를 입력해 주면 된다.
//////////////////////////////////////////////////////////////////

다른 사람 git 가져오기

폴더 만들기

git bash here

git init

git pull origin 주소

////////////////////////////////////////////////////////////////

others

git add를 했는데 이를 다시 내리고 싶을 때
git reset .


커밋 명령어를 잘못 넣었을때
git commit -m "Add my_module [Sub]" 를
git commit --amend
